{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\bc-38-buoi-1\\\\src\\\\components\\\\CardToDo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardToDo = () => {\n  _s();\n  const rex = /^[\\s\\W]/;\n  // Công việc người dùng nhập\n  const [todo, setTodo] = useState(\"\");\n  // Danh sách công việc người dùng đã nhập, ban đầu nó là 1 mảng rỗng\n  const [jobs, setJobs] = useState(() => {\n    return localStorage.getItem(\"JobTodoList\") !== null ? JSON.parse(localStorage.getItem(\"JobTodoList\")) : [];\n  });\n  console.log(\"job\", jobs);\n  // Danh sách các công việc đã hoàn thành\n  const [check, setCheck] = useState(() => {\n    return localStorage.getItem(\"JobTodoListDone\") !== null ? JSON.parse(localStorage.getItem(\"JobTodoListDone\")) : [];\n  });\n  const setLocalStorage = (key, value) => {\n    localStorage.setItem(key, JSON.stringify(value));\n  };\n  // -------------------------HÀM TẠO MỚI CÔNG VIỆC SAU MỖI LẦN BẤM NÚT------------\n  const handleSubmit = () => {\n    if (todo === undefined || todo === null || todo === \"\") return;\n    setJobs(prev => {\n      const newJobs = [...prev, todo];\n      setLocalStorage(\"JobTodoList\", newJobs);\n      return newJobs;\n    });\n    setTodo(\"\");\n  };\n  // ------------------------------ HÀM XÓA CÔNG VIỆC---------------------------------\n  const handleDelete = id => {\n    // console.log(jobs);\n    jobs.splice(id, 1);\n    // Sao chép lại mảng hiện tại đang bị xóa.\n    let jobRemaining = [...jobs];\n    // console.log(jobs);\n    setLocalStorage(\"JobTodoList\", jobRemaining);\n    return setJobs(jobRemaining);\n  };\n  // ------------------------- HÀM XÓA CÔNG VIỆC HOÀN THÀNH-----------------------------\n  const handleDeleteComplete = id => {\n    // console.log(jobs);\n    check.splice(id, 1);\n    // Sao chép lại mảng hiện tại đang bị xóa.\n    let jobRemaining = [...check];\n    // console.log(jobs);\n    setLocalStorage(\"JobTodoListDone\", jobRemaining);\n    return setCheck(jobRemaining);\n  };\n  // ------------------------------HÀM CHECK VIỆC ĐÃ LÀM-------------------------------\n  const handleCheck = id => {\n    // Lọc qua danh sách công việc, lấy ra công việc đang check\n    let Filter = jobs.filter((item, index) => index === id);\n    console.log(Filter);\n    // khi check thì đồng nghĩa xóa đi phần tử trong danh sách công việc\n    jobs.splice(id, 1);\n    let jobRemaining = [...jobs];\n    // Đồng thời cập nhật lại localStorage\n    setLocalStorage(\"JobTodoList\", jobRemaining);\n    // Sau đó sẽ đưa giá trị đã xóa xuống danh sách hoàn thành\n    let jobAdded = [...check, ...Filter];\n    setLocalStorage(\"JobTodoListDone\", jobAdded);\n    return setCheck(jobAdded);\n  };\n  function reg(e) {\n    if (rex.test(e.target.value)) {\n      return;\n    } else {\n      setTodo(e.target.value);\n    }\n  }\n  // --------------------- RENDER GIAO DIỆN-------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__add\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"newTask\",\n        name: \"newTask\",\n        type: \"text\",\n        placeholder: \"Enter an activity...\",\n        value: todo,\n        onChange: e => reg(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        id: \"addItem\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-plus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card__todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo\",\n        id: \"todo\",\n        children: jobs.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todo-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-title\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash-can icon-delete\",\n              onClick: () => handleDelete(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check icon-check\",\n              onClick: () => handleCheck(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"todo\",\n        id: \"completed\",\n        children: check.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"todo-task\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"todo-title\",\n            children: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-trash-can icon-delete\",\n              onClick: () => handleDeleteComplete(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(CardToDo, \"OUiYhVSOVGsWzUXIjiK5Dm80aGM=\");\n_c = CardToDo;\nexport default CardToDo;\nvar _c;\n$RefreshReg$(_c, \"CardToDo\");","map":{"version":3,"names":["React","useState","CardToDo","rex","todo","setTodo","jobs","setJobs","localStorage","getItem","JSON","parse","console","log","check","setCheck","setLocalStorage","key","value","setItem","stringify","handleSubmit","undefined","prev","newJobs","handleDelete","id","splice","jobRemaining","handleDeleteComplete","handleCheck","Filter","filter","item","index","jobAdded","reg","e","test","target","map"],"sources":["D:/React/bc-38-buoi-1/src/components/CardToDo.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst CardToDo = () => {\r\n  const rex = /^[\\s\\W]/;\r\n  // Công việc người dùng nhập\r\n  const [todo, setTodo] = useState(\"\");\r\n  // Danh sách công việc người dùng đã nhập, ban đầu nó là 1 mảng rỗng\r\n  const [jobs, setJobs] = useState(() => {\r\n    return localStorage.getItem(\"JobTodoList\") !== null\r\n      ? JSON.parse(localStorage.getItem(\"JobTodoList\"))\r\n      : [];\r\n  });\r\n  console.log(\"job\", jobs);\r\n  // Danh sách các công việc đã hoàn thành\r\n  const [check, setCheck] = useState(() => {\r\n    return localStorage.getItem(\"JobTodoListDone\") !== null\r\n      ? JSON.parse(localStorage.getItem(\"JobTodoListDone\"))\r\n      : [];\r\n  });\r\n\r\n  const setLocalStorage = (key, value) => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  };\r\n  // -------------------------HÀM TẠO MỚI CÔNG VIỆC SAU MỖI LẦN BẤM NÚT------------\r\n  const handleSubmit = () => {\r\n    if(todo===undefined || todo===null || todo===\"\") return;\r\n    setJobs((prev) => {\r\n      const newJobs = [...prev, todo];\r\n      setLocalStorage(\"JobTodoList\", newJobs);\r\n      return newJobs;\r\n    });\r\n    setTodo(\"\");\r\n  };\r\n  // ------------------------------ HÀM XÓA CÔNG VIỆC---------------------------------\r\n  const handleDelete = (id) => {\r\n    // console.log(jobs);\r\n    jobs.splice(id, 1);\r\n    // Sao chép lại mảng hiện tại đang bị xóa.\r\n    let jobRemaining = [...jobs];\r\n    // console.log(jobs);\r\n    setLocalStorage(\"JobTodoList\", jobRemaining);\r\n    return setJobs(jobRemaining);\r\n  };\r\n  // ------------------------- HÀM XÓA CÔNG VIỆC HOÀN THÀNH-----------------------------\r\n  const handleDeleteComplete = (id) => {\r\n    // console.log(jobs);\r\n    check.splice(id, 1);\r\n    // Sao chép lại mảng hiện tại đang bị xóa.\r\n    let jobRemaining = [...check];\r\n    // console.log(jobs);\r\n    setLocalStorage(\"JobTodoListDone\", jobRemaining);\r\n    return setCheck(jobRemaining);\r\n  };\r\n  // ------------------------------HÀM CHECK VIỆC ĐÃ LÀM-------------------------------\r\n  const handleCheck = (id) => {\r\n    // Lọc qua danh sách công việc, lấy ra công việc đang check\r\n    let Filter = jobs.filter((item, index) => index === id);\r\n    console.log(Filter);\r\n    // khi check thì đồng nghĩa xóa đi phần tử trong danh sách công việc\r\n    jobs.splice(id, 1);\r\n    let jobRemaining = [...jobs];\r\n    // Đồng thời cập nhật lại localStorage\r\n    setLocalStorage(\"JobTodoList\", jobRemaining);\r\n    // Sau đó sẽ đưa giá trị đã xóa xuống danh sách hoàn thành\r\n    let jobAdded = [...check, ...Filter];\r\n\r\n    setLocalStorage(\"JobTodoListDone\", jobAdded);\r\n    return setCheck(jobAdded);\r\n  };\r\n  function reg(e){\r\n    if (rex.test(e.target.value)) {\r\n      return;\r\n    } else {\r\n      setTodo(e.target.value);\r\n    }\r\n  }\r\n  // --------------------- RENDER GIAO DIỆN-------------------------------------\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"card__add\">\r\n        <input\r\n          id=\"newTask\"\r\n          name=\"newTask\"\r\n          type=\"text\"\r\n          placeholder=\"Enter an activity...\"\r\n          value={todo}\r\n          onChange={(e) => reg(e)}\r\n        />\r\n        <button onClick={handleSubmit} id=\"addItem\">\r\n          <i className=\"fa fa-plus\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"card__todo\">\r\n        <ul className=\"todo\" id=\"todo\">\r\n          {jobs.map((item, index) => (\r\n            <li key={index} className=\"todo-task\">\r\n              <span className=\"todo-title\">{item}</span>\r\n              <div className=\"btn-group\">\r\n                <i\r\n                  className=\"fas fa-trash-can icon-delete\"\r\n                  onClick={() => handleDelete(index)}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-check icon-check\"\r\n                  onClick={() => handleCheck(index)}\r\n                ></i>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n        <ul className=\"todo\" id=\"completed\">\r\n          {check.map((item, index) => (\r\n            <li key={index} className=\"todo-task\">\r\n              <span className=\"todo-title\">{item}</span>\r\n              <div className=\"btn-group\">\r\n                <i\r\n                  className=\"fas fa-trash-can icon-delete\"\r\n                  onClick={() => handleDeleteComplete(index)}\r\n                ></i>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardToDo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}